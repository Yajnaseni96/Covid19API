{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\React\\\\covid19\\\\src\\\\components\\\\CountryPicker\\\\CountryPicker.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({\n  handleCountryChange\n}) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n  console.log(fetchedCountries);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    defaultValue: \"\",\n    onChange: e => handleCountryChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"global\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Global\"), fetchedCountries.map((country, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 42\n    }\n  }, country))));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/React/covid19/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","fetchCountries","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","console","log","container","e","target","value","map","country","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,mBAAxC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,cAAR,QAA6B,WAA7B;;AAEA,MAAMC,aAAa,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA0B;AAE3C,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAE,MAAI;AACX,UAAMS,QAAQ,GAAG,YAAW;AACxBD,MAAAA,mBAAmB,CAAC,MAAMJ,cAAc,EAArB,CAAnB;AACH,KAFD;;AAIAK,IAAAA,QAAQ;AACX,GANQ,EAMN,CAACD,mBAAD,CANM,CAAT;AAQAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACA,sBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEJ,MAAM,CAACS,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAC,EAA3B;AAA8B,IAAA,QAAQ,EAAGC,CAAD,IAAOP,mBAAmB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEPR,gBAAgB,CAACS,GAAjB,CAAqB,CAACC,OAAD,EAAUC,CAAV,kBAAe;AAAS,IAAA,GAAG,EAAGA,CAAf;AAAkB,IAAA,KAAK,EAAED,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,OAAnC,CAApC,CAFO,CADJ,CADJ;AAQH,CArBD;;AAuBA,eAAeZ,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api'\r\n\r\nconst CountryPicker =({handleCountryChange}) =>{\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect (()=>{\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n\r\n        fetchAPI()\r\n    }, [setFetchedCountries])\r\n\r\n    console.log(fetchedCountries)\r\n    return(\r\n        <FormControl className={styles.container}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"global\">Global</option>\r\n    {fetchedCountries.map((country, i) =><option  key ={i} value={country}>{country}</option>)} \r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker"]},"metadata":{},"sourceType":"module"}