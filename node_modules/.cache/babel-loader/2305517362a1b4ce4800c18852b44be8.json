{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\React\\\\covid19\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }) : null;\n  const barChar = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/React/covid19/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChar","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AACA,MAAMC,KAAK,GAAE,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAN;AAAsCC,EAAAA;AAAtC,CAAD,KAAmD;AAE5D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,QAAQ,GAAG,YAAS;AACtBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACH,KAFD;;AAIAY,IAAAA,QAAQ;AACX,GANQ,CAAT;AAQA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBAEC,oBAAC,IAAD;AACD,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADC;AAEPa,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACChB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACR,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADP;AAECW,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICE,QAAAA,eAAe,EAAE,mBAJlB;AAKCD,QAAAA,IAAI,EAAE;AALP,OALO;AAFR,KADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,GAkBI,IAnBR;AAyBA,QAAME,OAAO,GACTjB,SAAS,gBAEL,oBAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACES,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADV;AAEEG,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,QADA;AAEPG,QAAAA,eAAe,EAAE,CAAC,sBAAD,EACD,sBADC,EAED,sBAFC,CAFV;AAKPjB,QAAAA,IAAI,EAAE,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB;AALC,OAAD;AAFZ,KADN;AAYA,IAAA,OAAO,EAAE;AACLgB,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OADH;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAC,IAAT;AAAeE,QAAAA,IAAI,EAAE,oBAAmBlB,OAAQ;AAAhD;AAFF,KAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,GAkBN,IAnBP;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,SADL,CADJ;AAKH,CA/DD;;AAiEA,eAAeT,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\nconst Chart =({data:{confirmed, recovered, deaths}, country}) =>{\r\n\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async()=>{\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n            \r\n        fetchAPI()\r\n    })\r\n\r\n    const lineChart =(\r\n        dailyData.length\r\n        ?\r\n        (<Line\r\n        data={{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n            }],\r\n        }}\r\n        />):null\r\n\r\n\r\n        \r\n    )\r\n\r\n    const barChar =(\r\n        confirmed?\r\n        (\r\n            <Bar\r\n            data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)',\r\n                                        'rgba(0, 255, 0, 0.5)',\r\n                                        'rgba(255, 0, 0, 0.5)'],\r\n                        data: [confirmed, recovered, deaths]\r\n                    }]\r\n            }}\r\n            \r\n            options={{\r\n                legend: {display:false},\r\n                title: {display:true, text:`Current state in ${country}`}\r\n            }}/>\r\n        ): null\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Chart"]},"metadata":{},"sourceType":"module"}